<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-autowire="byName">


	<!-- 配置connectionFactory -->
	<bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL">
					<value>tcp://114.112.90.40:61616</value>
				</property>
				<property name="userName">
					<value>admin</value>
				</property>
				<property name="password">
					<value>admin</value>
				</property>
			</bean>
		</property>
		<property name="maxConnections" value="100"></property>
	</bean>
	<!-- Spring Caching连接工厂 -->
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="cachingConnectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory" ref="connectinFactory"></property>
		<!-- Session缓存数量 -->
		<property name="sessionCacheSize" value="10"></property>
	</bean>
	 <!-- 定义主题 -->  
    <bean id="myTopic"  class="org.apache.activemq.command.ActiveMQTopic">  
      <constructor-arg value="normandy.topic"/>  
    </bean>  
      
    <bean id="myTopic2"  class="org.apache.activemq.command.ActiveMQTopic">  
      <constructor-arg value="normandy.topic2"/>  
    </bean>  
      
    <!-- 消息转换器 -->  
    <bean id="messageConvertForSys" class="com.normandy.tech.test.MessageConvertForSys"></bean>  
      
    <!-- TOPIC send jms模板 -->  
    <bean id="topicSendJmsTemplate" class="org.springframework.jms.core.JmsTemplate">  
        <property name="connectionFactory" ref="topicSendConnectionFactory"></property>  
        <property name="defaultDestination" ref="myTopic" />  
        <property name="messageConverter" ref="messageConvertForSys" />  
        <!-- 开启订阅模式 -->  
        <property name="pubSubDomain" value="true"/> 
        <property name="AUTO_ACKNOWLEDGE" value="1"/> 
    </bean>  
      
    <!-- 消息发送方 -->  
    <bean id="topicMessageSender" class="com.normandy.tech.test.MessageSender">  
        <property name="jmsTemplate" ref="topicSendJmsTemplate"></property>  
    </bean>  
      
    <!-- 消息接收方 -->  
    <bean id="topicMessageReceiver" class="com.normandy.tech.test.MessageReceiver">  
    </bean>  
      
    <!-- 主题消息监听容器 -->  
    <bean id="listenerContainer"    
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">    
        <property name="connectionFactory" ref="topicListenConnectionFactory" />    
        <property name="pubSubDomain" value="true"/><!-- default is false -->  
        <property name="destination" ref="myTopic" />  <!-- listen topic: myTopic -->  
        <property name="subscriptionDurable" value="true"/>  
        <property name="clientId" value="clientId_001"/><!---这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，知道被这个ID的客户端消费掉-->  
        <property name="messageListener" ref="topicMessageReceiver" />    
    </bean>  
      
    <!-- 主题消息监听容器2 -->  
    <bean id="listenerContainer2"    
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">    
        <property name="connectionFactory" ref="topicListenConnectionFactory" />    
        <property name="pubSubDomain" value="true"/><!-- default is false -->  
        <property name="destination" ref="myTopic2" />  <!-- listen topic: myTopic2 -->  
        <property name="subscriptionDurable" value="true"/>  
        <property name="clientId" value="clientId_002"/><!---这里是设置接收客户端的ID，在持久化时，但这个客户端不在线时，消息就存在数据库里，知道被这个ID的客户端消费掉-->  
        <property name="messageListener" ref="topicMessageReceiver" />    
    </bean>  


</beans>